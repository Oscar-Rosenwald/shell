#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

file=~/Private/passwords/aws

printHelp () {
cat <<EOF
$0 <1-4> [-p password] [-f file] [user]
$0 <ip>  ---||---

If password is given (before or after user), store it in file.

Defaults:
- file  = $file
- user  = admin
- which = 1
EOF
}

password=
forceNoPassword=false
user=
which=

while [[ "$#" -gt 0 ]]; do
	case "$1" in
		-p)
			password="$2"
			if [[ -z "$password" ]]; then
				forceNoPassword=true
			fi
			shift
			;;
		-f)
			file="$2"
			shift
			;;
		-h|--help)
			printHelp
			exit 0
			;;
		*)
			if [[ -z "$which" ]]; then
				which="$1"
			elif [[ -z "$user" ]]; then
				user="$1"
			else
				printHelp
				exit 1
			fi
			;;
	esac
	shift
done

if [[ -z "$which" ]]; then
	which=1
fi
if [[ -z "$user" ]]; then
	user=admin
fi

function constructPasswordLine {
	whichAWS=$1
	echo "^$whichAWS:.*"
}

function extractPasswordFromLine {
	line="$1"
	echo "$line" | sed 's/^\([0-9]\|.\)\+://'
}

if [[ ! -z "$password" ]]; then
	if grep -q "$(constructPasswordLine $which)" $file; then
		sed -i "s/$(constructPasswordLine $which)$/$which:$password/" $file
		echo Stored new password: $(grep $(constructPasswordLine $which) $file)
	else
		echo "$which:$password" >> $file
		echo Inserted new password $password for $which
	fi
fi

usePassword=`extractPasswordFromLine "$(grep $(constructPasswordLine $which) $file)"`
echo "using password '$usePassword'"

# If using AWS, only the number is given. Translate it to a URL.
# If whole IP is given, do nothing.
if [[ "$which" =~ "[0-9]" ]]; then
	which=aws-itest-0$which.aws.vaion.com
fi

echo "Using URL $which"

if [[ ! -z "$usePassword" ]] && [[ $forceNoPassword = false ]]; then
	sshpass -p $usePassword ssh "$user@$which"
else
	ssh "$user@$which"
fi

