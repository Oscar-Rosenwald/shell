#!/bin/bash

set -euo pipefail
IFS=$'\n\t'

# This file defines commonly used functions for manipulating high availability run_cluster tests.
# It expects to run run_cluster in a hybrid mode with at least 3 nodes in the secondary server group.
# If you use run, then 3 nodes will be used.
#
# It is assumed that there exist two directories in ~/ which hold pre-build configurations
# of run_cluster so we do not have to rebuild them every time, which is tedious and racy. The directories
# are:
clean_cluster=~/cluster_CLEAN.bk # holds a clean build with no HA enabled.
ha_cluster=~/cluster_HA.bk       # holds a build with high availability already enabled.

function get {
	curl http://localhost:8080/api/v1/serverGroups | jq '.[].id'
}

function setha {
	id=$(curl http://localhost:8080/api/v1/serverGroups | jq '.[].id' | tail -n 1 | sed 's/"//g')
	echo
	echo $id
	curl http://localhost:8080/api/v1/serverGroups/$id -v -X PUT -d '{"highly_available":true}'
}

function unsetha {
	id=$(curl http://localhost:8080/api/v1/serverGroups | jq '.[].id' | tail -n 1 | sed 's/"//g')
	echo
	echo $id
	curl http://localhost:8080/api/v1/serverGroups/$id -v -X PUT -d '{"highly_available":false}'
}

function db {
	container="${1:-2}"
	port=$((5432 + ($container - 1) * 4))

	if [[ ! -z ${2:-} ]]; then
		port=$(($port + 1))
		echocolour "Entering replica DB of postgres_$container on port $port"
	else
		echocolour "Entering local DB of postgres_$container on port $port"
	fi
	
	docker exec -it postgres_$container psql -U postgres -d vaionmgmt -p $port
}

function sh {
	docker exec -it postgres_$1 bash
}

function run {
	target="${1:-clean}"
	src=$clean_cluster
	if [[ $target = ready ]]; then
		src=$ha_cluster
	fi

	runCluster=$VAION_PATH/scripts/run_cluster
	
	if [[ ! -d $src ]] || [[ $target = new ]]; then
		echocolour "Creating new cluster"
		$runCluster --hybrid 3 -r
	else
		echocolour "Running existing cluster in $target mode"
		sudo rm -rf ~/cluster && sudo cp -ar $src ~/cluster
		$runCluster --hybrid 3
	fi
}

function insertDisk {
	container="${1:-2}"
	port=$((5432 + ($container - 1) * 4))
	diskId="${2:-1}"
	
	docker exec postgres_$container psql -U postgres -d vaionmgmt -p $port -c "INSERT INTO disks (serial, name) VALUES ('$diskId','$diskId');"
}

function getDisks {
	container="${1:-3}"
	port=$((5432 + ($container - 1) * 4 + 1))
	
	docker exec postgres_$container psql -U postgres -d vaionmgmt -p $port -c "SELECT serial, name FROM disks;"
}