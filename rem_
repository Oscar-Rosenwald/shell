#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'

cd $VAION_PATH

function matchesMultiLine___ {
	file=$1
	if [[ -z `grep ___{{ $file` ]]; then
		echo false
	elif [[ -z `grep ___}} $file` ]]; then
		echo false
	else
		echo true
	fi
}

function getFiles {
	fileOrDir="$1"
	
	if [[ -f "$fileOrDir" ]]; then
		echo "$fileOrDir"
	else
		for candidateFile in $(find "$fileOrDir" -type f -path '*.go'); do
			if [[ ! -z $(grep "___" "$candidateFile") ]]; then
				echo "$candidateFile"
			fi
		done
	fi
}

for i in ${@:-$(git grep --name-only "\(___\|~~~\)" -- "go/vms/*.go" \
					"go/access/*.go" \
					"go/lib/*.go" \
					"go/tests/*.go" \
					"go/camera/*.go" | grep -v "mgmt/alertservice/alertservice_test.go")}; do

	for f in $(getFiles "$i"); do
		didSomething=true

		multiLine=$(matchesMultiLine___ $f)
		if [[ $multiLine = true ]]; then
			echocolour "Removing ___{{...___}}"
			sed -i '/___{{/,/___}}/{d}' $f
		fi

		echocolour "Removing ___ from $f"
		sed -i ''/___/d'' "$f"

		echocolour "Reverting ~~~ changes"
		sed -i 's;^\([ \t]*\)// \(.*\)~~~$;\1\2;' "$f"
	done
done

if [[ -z "${didSomething:-}" ]]; then
	echocolour "No files were changed"
	exit 0
fi

echocolour "Running goimports"
# No matter which files we changed, they are changed now, so `git diff` gives us the right names
git diff --name-only | grep ".go$" | xargs goimports -w

echocolour "Running formatting"
git diff --name-only | grep ".go$" | xargs gofumpt -w 

echocolour "Running gazelle"
bazel run //:gazelle